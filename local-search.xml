<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Java各种数据类型的常用api</title>
    <link href="/2024/10/08/myfirstblog/"/>
    <url>/2024/10/08/myfirstblog/</url>
    
    <content type="html"><![CDATA[<p>本文总结了Java中常用的处理各种数据类型的内置api。</p><span id="more"></span><h2 id="数组Array"><a href="#数组Array" class="headerlink" title="数组Array"></a>数组Array</h2><ul><li>求长度 <code>nums.length</code></li><li>升序重排 <code>Arrays.sort(nums)</code></li><li>填充数组 <code>Arrays.fill(nums, val)</code></li><li>转化为字符串 <code>Arrays.toString(nums)</code></li><li>将多维数组转化为字符串 <code>Arrays.deepToString(nums)</code></li><li>转化为链表 <code>new LinkedList(Arrays.asList(nums))</code></li><li>字符串数组转化为字符串 <code>new String(chars)</code></li><li>判断数组元素相同 <code>Arrays.equals(nums1, nums2)</code></li></ul><h2 id="字符串String"><a href="#字符串String" class="headerlink" title="字符串String"></a>字符串String</h2><ul><li>求长度 <code>str.length()</code></li><li>以<code>regex</code>分割字符串为数组 <code>str.split(regex)</code></li><li>查找目标字符（串）（找不到返回-1） <code>str.indexOf(c)</code> <code>str.lastIndexOf(c)</code> <code>str.indexOf(subStr)</code> <code>str.lastIndexOf(subStr)</code></li><li>判断字符串相同 <code>strA.equals(strB)</code></li><li>比较字符串的字典序 <code>strA.compareTo(strB)</code></li><li>判断是否以目标前缀开头 <code>str.startsWith(prefix)</code></li><li>判断是否以目标后缀结尾 <code>str.endsWith(suffix)</code></li><li>去除首尾空格 <code>str.trim()</code></li><li>全小写 <code>str.toLowerCase()</code></li><li>全大写 <code>str.toUpperCase()</code></li><li>替换字符 <code>str.replace(oldChar, newChar)</code></li><li>替换字符串 <code>str.replace(oldRegex, newRegex)</code></li><li>获取从<code>[start, end - 1]</code>的子串 <code>str.substring(start, end)</code></li><li>获取第i个字符 <code>str.charAt(i)</code></li><li>转化为字符数组 <code>str.toCharArray()</code></li><li>转化为StringBuilder <code>new StringBuilder(str)</code></li><li>转化为整数 <code>Integer.parseInt(str)</code> <code>Integer.valueOf(str)</code></li><li>数字转化为字符串 <code>String.valueOf(num)</code></li></ul><h2 id="字符串StringBuilder"><a href="#字符串StringBuilder" class="headerlink" title="字符串StringBuilder"></a>字符串StringBuilder</h2><ul><li>在末尾添加新字符（串） <code>sb.append(c)</code> <code>sb.append(str)</code></li><li>删除第i个字符 <code>sb.deleteCharAt(i)</code></li><li>删除从<code>[start, end - 1]</code>的子串 <code>sb.delete(start, end)</code></li><li>替换第i个字符 <code>sb.setCharAt(i, newChar)</code></li><li>替换从<code>[start, end - 1]</code>的子串 <code>sb.replace(start, end, str)</code></li><li>在第i个字符之前插入字符串 <code>sb.insert(i, str)</code></li><li>反转字符串 <code>sb.reverse()</code></li><li>转化为String <code>sb.toString()</code></li></ul><h2 id="链表List"><a href="#链表List" class="headerlink" title="链表List"></a>链表List</h2><ul><li>末尾添加元素 <code>list.add(element)</code></li><li>获取第i个位置的元素 <code>list.get(i)</code></li><li>替换第i个位置的元素 <code>list.set(i, newElement)</code></li><li>删除第i个位置的元素 <code>list.remove(i)</code></li><li>删除最后一个元素 <code>linkedList.removeLast()</code></li><li>求长度 <code>list.size()</code></li><li>判断是否为空 <code>list.isEmpty()</code></li><li>清空 <code>list.clear()</code></li><li>判断是否包含某元素 <code>list.contains(object)</code></li><li>查找元素（找不到返回-1） <code>list.indexOf(object)</code> <code>list.lastIndexOf(object)</code></li><li>转化为集合 <code>new HashSet&lt;&gt;(list)</code></li><li>转化为整数数组 <code>list.stream().mapToInt(x -&gt; x).toArray()</code> <code>list.stream().mapToInt(Integer::intValue).toArray()</code></li><li>转化为字符串数组 <code>(String[]) list.toArray(new String [0])</code></li></ul><h2 id="栈Stack"><a href="#栈Stack" class="headerlink" title="栈Stack"></a>栈Stack</h2><ul><li>压入栈顶 <code>stk.push(element)</code></li><li>从栈顶弹出 <code>stk.pop()</code></li><li>查看栈顶元素 <code>stk.peek()</code></li><li>求长度 <code>stk.size()</code></li><li>判断是否为空 <code>stk.isEmpty()</code> <code>stk.empty()</code></li></ul><h2 id="单端队列Queue"><a href="#单端队列Queue" class="headerlink" title="单端队列Queue"></a>单端队列Queue</h2><ul><li>从队尾添加元素 失败会抛异常<code>queue.add(element)</code> 失败会返回false<code>queue.offer(element)</code></li><li>从队头移除元素 空指针会抛异常<code>queue.remove()</code> 空指针会返回null<code>queue.poll()</code></li><li>查看队头元素 空指针会抛异常<code>queue.element()</code> 空指针会返回null<code>queue.peek()</code></li><li>求长度 <code>queue.size()</code></li><li>判断是否为空 <code>queue.isEmpty()</code></li><li>清空 <code>queue.clear()</code></li><li>判断是否包含某元素 <code>queue.contains(object)</code></li></ul><h2 id="双端队列Deque"><a href="#双端队列Deque" class="headerlink" title="双端队列Deque"></a>双端队列Deque</h2><ul><li>从队尾添加元素 失败会抛异常<code>deque.addLast(element)</code> 失败会返回false<code>deque.offerLast(element)</code></li><li>从队头添加元素 失败会抛异常<code>deque.addFirst(element)</code> <code>deque.push()</code> 失败会返回false<code>deque.offerFirst(element)</code></li><li>从队尾删除元素 空指针会抛异常<code>deque.removeLast()</code> 空指针会返回null<code>deque.pollLast()</code></li><li>从队头删除元素 空指针会抛异常<code>deque.removeFirst()</code> <code>deque.pop()</code> 空指针会返回null<code>deque.pollFirst()</code></li><li>查看队尾元素 空指针会抛异常<code>deque.getLast()</code> 空指针会返回null<code>deque.peekLast()</code></li><li>查看队头元素 空指针会抛异常<code>deque.getFirst()</code> 空指针会返回null<code>deque.peekFirst()</code></li><li>求长度 <code>deque.size()</code></li><li>判断是否为空 <code>deque.isEmpty()</code></li><li>清空 <code>deque.clear()</code></li></ul><h2 id="集合Set"><a href="#集合Set" class="headerlink" title="集合Set"></a>集合Set</h2><ul><li>添加元素 <code>set.add(element)</code></li><li>删除元素 <code>set.remove(element)</code></li><li>判断是否包含某元素 <code>set.contains(object)</code></li><li>求长度 <code>set.size()</code></li><li>清空 <code>set.clear()</code></li><li>获取不小于key的最小元素（空指针返回null） <code>treeSet.ceiling(key)</code></li><li>获取不大于key的最大元素（空指针返回null） <code>treeSet.floor(key)</code></li><li>获取第一个元素 <code>treeSet.first()</code></li><li>获取最后一个元素 <code>treeSet.last()</code></li><li>转化为整数数组 <code>set.stream().mapToInt(x -&gt; x).toArray()</code></li></ul><h2 id="映射Map"><a href="#映射Map" class="headerlink" title="映射Map"></a>映射Map</h2><ul><li>添加或修改键值对 <code>map.put(key, val)</code></li><li>删除键值对 <code>map.remove(key)</code></li><li>获取指定键对应的值 <code>map.get(key)</code></li><li>获取指定键对应的值（如果不存在，则设定默认值） <code>map.getOrDefault(key, defaultVal)</code></li><li>判断是否包含某个键 <code>map.containsKey(key)</code></li><li>判断是否包含某个值 <code>map.containsValue(val)</code></li><li>判断是否为空 <code>map.isEmpty()</code></li><li>求长度 <code>map.size()</code></li><li>清空 <code>map.clear()</code></li><li>生成对应的键值对集合 <code>map.entrySet()</code></li><li>获取不小于key的最小元素（空指针返回null） <code>treeMap.ceilingEntry(key)</code></li><li>获取不大于key的最大元素（空指针返回null） <code>treeMap.floorEntry(key)</code></li><li>获取第一个键 <code>treeMap.firstKey()</code></li><li>获取最后一个键 <code>treeMap.lastKey()</code></li></ul><h2 id="键值对Map-Entry"><a href="#键值对Map-Entry" class="headerlink" title="键值对Map.Entry"></a>键值对Map.Entry</h2><ul><li>获取键值对的键 <code>entry.getKey()</code></li><li>获取键值对的值 <code>entry.getValue()</code></li><li>修改键值对的值 <code>entry.setValue(val)</code></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/10/07/hello-world/"/>
    <url>/2024/10/07/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
